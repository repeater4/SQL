# Querying 2014 college football data that was collected using a Python scraper

/* Overview of data  */

SELECT * FROM benn.college_football_players
 
/* Finding which players were seniors during this season  */ 
 
SELECT player_name,
       year,
       CASE WHEN year = 'SR' THEN 'yes'
            ELSE 'no' END AS is_a_senior
  FROM benn.college_football_players 
  
  /* Writing a query that includes a column that is flagged "yes" when a player
  is from California, and sorting the results with those players first.*/
  
  SELECT player_name,
         state,
         CASE WHEN state = 'CA' THEN 'yes'
         ELSE NULL END AS from_california
  FROM benn.college_football_players 
  ORDER BY 3
  
/* Evaluating and classifying players by weight */
  
 SELECT player_name,
       weight,
       CASE WHEN weight > 250 THEN 'over 250'
            WHEN weight > 200 AND weight <= 250 THEN '201-250'
            WHEN weight > 175 AND weight <= 200 THEN '176-200'
            ELSE '175 or under' END AS weight_group
  FROM benn.college_football_players
  
/*Writing a query that includes players' names and a column that classifies them 
into four categories based on height.  */  

SELECT player_name,
       height,
       CASE WHEN height > 80 THEN 'tallest'
        WHEN height BETWEEN 75 AND 79 THEN 'tall'
        WHEN height BETWEEN 69 AND 74 THEN 'average'
        WHEN height < 69 THEN 'Shortest'
       END AS Height
FROM benn.college_football_players

/* Writing a query that selects all columns from the dataset and
adds an additional column that displays the player's name if that 
player is a junior or senior. */

SELECT *,
       CASE WHEN year IN ('JR', 'SR') THEN player_name 
       ELSE NULL END AS upperclass_player_name
  FROM benn.college_football_players  
  
/* Writing a query that counts the number of 300lb+ players for each 
of the following regions: West Coast (CA, OR, WA), Texas, and Other (everywhere else).*/  

SELECT CASE WHEN state IN ('CA', 'OR', 'WA') THEN 'West Coast'
            WHEN state = 'TX' THEN 'Texas'
            ELSE 'Other' END AS arbitrary_regional_designation,
            COUNT(1) AS players_over_300lbs
  FROM benn.college_football_players
 WHERE weight >= 300
 GROUP BY 1
 
 /*Writing a query that calculates the combined weight of all underclass 
 players (FR/SO) in California as well as the combined weight of all upperclass
 players (JR/SR) in California. */
 
 SELECT CASE WHEN year IN ('FR', 'SO') THEN 'underclass'
             WHEN year IN ('JR', 'SR') THEN 'upperclass'
           ELSE NULL END AS class_group,
       SUM(weight) AS combined_player_weight
   FROM benn.college_football_players
   WHERE state = 'CA'
   GROUP BY 1
   
/* Pivoting tables in SQL outut */
/* Vertically*/
SELECT CASE WHEN year = 'FR' THEN 'FR'
            WHEN year = 'SO' THEN 'SO'
            WHEN year = 'JR' THEN 'JR'
            WHEN year = 'SR' THEN 'SR'
            ELSE 'No Year Data' END AS year_group,
            COUNT(1) AS count
  FROM benn.college_football_players
 GROUP BY 1
 /* Horizontally */ 
 SELECT COUNT(CASE WHEN year = 'FR' THEN 1 ELSE NULL END) AS fr_count,
       COUNT(CASE WHEN year = 'SO' THEN 1 ELSE NULL END) AS so_count,
       COUNT(CASE WHEN year = 'JR' THEN 1 ELSE NULL END) AS jr_count,
       COUNT(CASE WHEN year = 'SR' THEN 1 ELSE NULL END) AS sr_count
  FROM benn.college_football_players
  
  /*Writing a query that displays the number of players in each state, 
  with FR, SO, JR, and SR players in separate columns and another column
  for the total number of players. Ordering results so that states with the
  most players come first. */ 
  
SELECT state,
       COUNT(CASE WHEN year = 'FR' THEN 1 ELSE NULL END) AS fr_count,
       COUNT(CASE WHEN year = 'SO' THEN 1 ELSE NULL END) AS so_count,
       COUNT(CASE WHEN year = 'JR' THEN 1 ELSE NULL END) AS jr_count,
       COUNT(CASE WHEN year = 'SR' THEN 1 ELSE NULL END) AS sr_count,
       COUNT(1) AS total_players
   FROM benn.college_football_players
     GROUP BY state
     ORDER BY total_players DESC  
     
/* Writing a query that shows the number of players at schools with names that
start with A through M, and the number at schools with names starting with N - Z. */

 SELECT CASE WHEN school_name < 'n' THEN 'A-M'
            WHEN school_name >= 'n' THEN 'N-Z'
            ELSE NULL END AS school_name_group,
       COUNT(1) AS players
       FROM benn.college_football_players
       GROUP BY 1
